---
AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: default
  SecurityGroupDefault:
    Type: AWS::EC2::SecurityGroup::Id
  SecurityGroupWeb:
    Type: AWS::EC2::SecurityGroup::Id
  SubnetIDs:
    Type: List<AWS::EC2::Subnet::Id>
  VpcID:
    Type: AWS::EC2::VPC::Id
    Default: vpc-32859a48
  LoadBalancerType:
    Type: String
    Default: application
    AllowedValues:
    - application
    - network
    ConstraintDescription: must specify an application or network load balancer type.
  LoadBalancerName:
    Type: String
    Default: growi
  ImageId:
    Type: String
    Default: 999775796670.dkr.ecr.us-east-1.amazonaws.com/growi:latest
  MongoURI:
    Type: String
    Default: mongodb://34.239.166.55:27017/growi
Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      NetworkMode: awsvpc
      Family: growi
      Cpu: 512
      ExecutionRoleArn: arn:aws:iam::999775796670:role/ecsTaskExecutionRole
      Memory: 1024
      RequiresCompatibilities:
      - FARGATE
      ContainerDefinitions:
      - Environment:
        - Name: MONGO_URI
          Value:
            Ref: MongoURI
        Name: growi
        WorkingDirectory: "/opt/growi"
        Image:
          Ref: ImageId
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: us-east-1
            awslogs-stream-prefix: ecs
            awslogs-group: "/ecs/growi"
        PortMappings:
        - Protocol: tcp
          ContainerPort: 3000
          HostPort: 3000
        EntryPoint:
        - npm
        - start
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: default
      TaskDefinition:
        Ref: TaskDefinition
      LaunchType: FARGATE
      ServiceName: growi
      DesiredCount: 1
      LoadBalancers:
      - ContainerName: growi
        ContainerPort: 3000
        LoadBalancerName:
          Ref: AWS::NoValue
        TargetGroupArn:
          Ref: TargetGroup
      HealthCheckGracePeriodSeconds: '30'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - Ref: SecurityGroupDefault
          Subnets:
            Ref: SubnetIDs
      PlatformVersion: 1.4.0
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DeploymentController:
        Type: ECS
    DependsOn: Listener
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: growi
      SecurityGroups:
      - Ref: SecurityGroupWeb
      - Ref: SecurityGroupDefault
      Subnets:
        Ref: SubnetIDs
      Type: application
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: growi
      VpcId: vpc-32859a48
      Protocol: HTTP
      Port: '3000'
      TargetType: ip
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10
      Matcher:
        HttpCode: 302
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - TargetGroupArn:
          Ref: TargetGroup
        Type: forward
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: '80'
      Protocol: HTTP
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value:
      Ref: ECSClusterName
  ECSService:
    Description: The created service.
    Value:
      Ref: ECSService
  LoadBalancer:
    Description: The created load balancer.
    Value:
      Ref: LoadBalancer
  Listener:
    Description: The created listener.
    Value:
      Ref: Listener
  TargetGroup:
    Description: The created target group.
    Value:
      Ref: TargetGroup
